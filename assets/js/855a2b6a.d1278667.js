"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2302],{3905:(t,e,r)=>{r.d(e,{Zo:()=>i,kt:()=>f});var n=r(67294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var p=n.createContext({}),s=function(t){var e=n.useContext(p),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},i=function(t){var e=s(t.components);return n.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},y=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,p=t.parentName,i=c(t,["components","mdxType","originalType","parentName"]),y=s(r),f=a,d=y["".concat(p,".").concat(f)]||y[f]||u[f]||o;return r?n.createElement(d,l(l({ref:e},i),{},{components:r})):n.createElement(d,l({ref:e},i))}));function f(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,l=new Array(o);l[0]=y;var c={};for(var p in e)hasOwnProperty.call(e,p)&&(c[p]=e[p]);c.originalType=t,c.mdxType="string"==typeof t?t:a,l[1]=c;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},16648:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const o={},l=void 0,c={unversionedId:"functions/crypto/chart",id:"functions/crypto/chart",title:"chart",description:".. role:: python(code)",source:"@site/sdk/functions/crypto/chart.md",sourceDirName:"functions/crypto",slug:"/functions/crypto/chart",permalink:"/docs/sdk/functions/crypto/chart",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"candles",permalink:"/docs/sdk/functions/crypto/candles"},next:{title:"active",permalink:"/docs/sdk/functions/crypto/dd/active"}},p={},s=[],i={toc:s};function u(t){let{components:e,...r}=t;return(0,a.kt)("wrapper",(0,n.Z)({},i,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,".. role:: python(code)\n:language: python\n:class: highlight"),(0,a.kt)("p",null,"|"),(0,a.kt)("p",null,"To obtain charts, make sure to add :python:",(0,a.kt)("inlineCode",{parentName:"p"},"chart = True")," as the last parameter."),(0,a.kt)("p",null,".. raw:: html"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"<h3>\n> Getting data\n</h3>\n")),(0,a.kt)("p",null,"{{< highlight python >}}\ncrypto.chart(\nprices_df: 'pd.DataFrame',\nto_symbol: 'str' = '',\nfrom_symbol: 'str' = '',\nsource: 'str' = '',\nexchange: 'str' = '',\ninterval: 'str' = '',\nexternal_axes: 'list","[plt.Axes]"," | None' = None, yscale: 'str' = 'linear',\nchart: bool = False,\n) -> 'None'\n{{< /highlight >}}"),(0,a.kt)("p",null,".. raw:: html"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"<p>\nLoad data for Technical Analysis\n</p>\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("p",{parentName:"li"},'  prices_df: pd.DataFrame\nCryptocurrency\nto_symbol: str\nCoin (only used for chart title), by default ""\nfrom_symbol: str\nCurrency (only used for chart title), by default ""\nyscale: str\nScale for y axis of plot Either linear or log\nchart: bool\nFlag to display chart'))),(0,a.kt)("p",null,"|"),(0,a.kt)("p",null,".. raw:: html"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"<h3>\n> Getting charts\n</h3>\n")),(0,a.kt)("p",null,"{{< highlight python >}}\ncrypto.chart(\nprices_df: 'pd.DataFrame',\nto_symbol: 'str' = '',\nfrom_symbol: 'str' = '',\nsource: 'str' = '',\nexchange: 'str' = '',\ninterval: 'str' = '',\nexternal_axes: 'list","[plt.Axes]"," | None' = None, yscale: 'str' = 'linear',\nchart: bool = False,\n) -> 'None'\n{{< /highlight >}}"),(0,a.kt)("p",null,".. raw:: html"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"<p>\nLoad data for Technical Analysis\n</p>\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("p",{parentName:"li"},'  prices_df: pd.DataFrame\nCryptocurrency\nto_symbol: str\nCoin (only used for chart title), by default ""\nfrom_symbol: str\nCurrency (only used for chart title), by default ""\nyscale: str\nScale for y axis of plot Either linear or log\nchart: bool\nFlag to display chart'))))}u.isMDXComponent=!0}}]);