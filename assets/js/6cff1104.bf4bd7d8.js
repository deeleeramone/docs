"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[85096],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>m});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),c=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},d=function(t){var e=c(t.components);return a.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,s=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),u=c(n),m=r,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return n?a.createElement(f,l(l({ref:e},d),{},{components:n})):a.createElement(f,l({ref:e},d))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i.mdxType="string"==typeof t?t:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},48046:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={},l=void 0,i={unversionedId:"functions/stocks/candle",id:"functions/stocks/candle",title:"candle",description:".. role:: python(code)",source:"@site/sdk/functions/stocks/candle.md",sourceDirName:"functions/stocks",slug:"/functions/stocks/candle",permalink:"/docs/sdk/functions/stocks/candle",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"volume",permalink:"/docs/sdk/functions/stocks/ca/volume"},next:{title:"analyst",permalink:"/docs/sdk/functions/stocks/dd/analyst"}},s={},c=[],d={toc:c};function p(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,".. role:: python(code)\n:language: python\n:class: highlight"),(0,r.kt)("p",null,"|"),(0,r.kt)("p",null,".. raw:: html"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<h3>\n> Getting data\n</h3>\n")),(0,r.kt)("p",null,"{{< highlight python >}}\nstocks.candle(\nsymbol: str,\ndata: pandas.core.frame.DataFrame = None,\nuse_matplotlib: bool = True,\nintraday: bool = False,\nadd_trend: bool = False,\nma: Optional[Iterable","[int]","] = None,\nasset_type: str = '',\nstart_date: Union","[datetime.datetime, str,\nNoneType]"," = datetime.datetime(\n2019, 11, 6, 10, 18, 10, 664216, chart: bool = False,\n), interval: int = 1440,\nend_date: Union","[datetime.datetime, str,\nNoneType]"," = datetime.datetime(\n2022, 11, 10, 10, 18, 10, 664216, chart: bool = False,\n), prepost: bool = False,\nsource: str = 'YahooFinance',\niexrange: str = 'ytd',\nweekly: bool = False,\nmonthly: bool = False,\nexternal_axes: Optional[List","[matplotlib.axes._axes.Axes]","] = None,\nraw: bool = False,\nyscale: str = 'linear',\nchart: bool = False,\n)\n{{< /highlight >}}"),(0,r.kt)("p",null,".. raw:: html"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<p>\nShow candle plot of loaded ticker.\n\n[Source: Yahoo Finance, IEX Cloud or Alpha Vantage]\n</p>\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("p",{parentName:"li"},"  symbol: str\nTicker name\ndata: pd.DataFrame\nStock dataframe\nuse_matplotlib: bool\nFlag to use matplotlib instead of interactive plotly chart\nintraday: bool\nFlag for intraday data for plotly range breaks\nadd_trend: bool\nFlag to add high and low trends to chart\nma: Tuple","[int]","\nMoving averages to add to the candle\nasset_type","_",": str\nString to include in title\nexternal_axes : Optional[List","[plt.Axes]","], optional\nExternal axes (2 axes are expected in the list), by default None\nasset_type","_",": str\nString to include in title\nstart_date: str or datetime, optional\nStart date to get data from with. - datetime or string format (YYYY-MM-DD)\ninterval: int\nInterval (in minutes) to get data 1, 5, 15, 30, 60 or 1440\nend_date: str or datetime, optional\nEnd date to get data from with. - datetime or string format (YYYY-MM-DD)\nprepost: bool\nPre and After hours data\nsource: str\nSource of data extracted\niexrange: str\nTimeframe to get IEX data.\nweekly: bool\nFlag to get weekly data\nmonthly: bool\nFlag to get monthly data\nraw : bool, optional\nFlag to display raw data, by default False\nyscale: str\nLinear or log for yscale"))))}p.isMDXComponent=!0}}]);