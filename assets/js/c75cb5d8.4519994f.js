"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[32153],{3905:(t,e,o)=>{o.d(e,{Zo:()=>c,kt:()=>d});var r=o(67294);function n(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function l(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,r)}return o}function a(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?l(Object(o),!0).forEach((function(e){n(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):l(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function p(t,e){if(null==t)return{};var o,r,n=function(t,e){if(null==t)return{};var o,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)o=l[r],e.indexOf(o)>=0||(n[o]=t[o]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)o=l[r],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(n[o]=t[o])}return n}var i=r.createContext({}),s=function(t){var e=r.useContext(i),o=e;return t&&(o="function"==typeof t?t(e):a(a({},e),t)),o},c=function(t){var e=s(t.components);return r.createElement(i.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var o=t.components,n=t.mdxType,l=t.originalType,i=t.parentName,c=p(t,["components","mdxType","originalType","parentName"]),f=s(o),d=n,m=f["".concat(i,".").concat(d)]||f[d]||u[d]||l;return o?r.createElement(m,a(a({ref:e},c),{},{components:o})):r.createElement(m,a({ref:e},c))}));function d(t,e){var o=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=o.length,a=new Array(l);a[0]=f;var p={};for(var i in e)hasOwnProperty.call(e,i)&&(p[i]=e[i]);p.originalType=t,p.mdxType="string"==typeof t?t:n,a[1]=p;for(var s=2;s<l;s++)a[s]=o[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}f.displayName="MDXCreateElement"},15253:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var r=o(87462),n=(o(67294),o(3905));const l={},a=void 0,p={unversionedId:"features/portfolio/holdp",id:"features/portfolio/holdp",title:"holdp",description:".. role:: python(code)",source:"@site/sdk/features/portfolio/holdp.md",sourceDirName:"features/portfolio",slug:"/features/portfolio/holdp",permalink:"/docs/sdk/features/portfolio/holdp",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"gaintopain",permalink:"/docs/sdk/features/portfolio/gaintopain"},next:{title:"holdv",permalink:"/docs/sdk/features/portfolio/holdv"}},i={},s=[],c={toc:s};function u(t){let{components:e,...o}=t;return(0,n.kt)("wrapper",(0,r.Z)({},c,o,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,".. role:: python(code)\n:language: python\n:class: highlight"),(0,n.kt)("p",null,"|"),(0,n.kt)("p",null,"To obtain charts, make sure to add :python:",(0,n.kt)("inlineCode",{parentName:"p"},"chart = True")," as the last parameter."),(0,n.kt)("p",null,".. raw:: html"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"<h3>\n> Getting data\n</h3>\n")),(0,n.kt)("p",null,"{{< highlight python >}}\nportfolio.holdp(\nportfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel,\nchart: bool = False,\n)\n{{< /highlight >}}"),(0,n.kt)("p",null,".. raw:: html"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"<p>\nGet holdings of assets (in percentage)\n</p>\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},"  portfolio: Portfolio\nPortfolio object with trades loaded\nchart: bool\nFlag to display chart"))),(0,n.kt)("p",null,"|"),(0,n.kt)("p",null,".. raw:: html"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"<h3>\n> Getting charts\n</h3>\n")),(0,n.kt)("p",null,"{{< highlight python >}}\nportfolio.holdp(\nportfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel,\nunstack: bool = False,\nraw: bool = False,\nlimit: int = 10,\nexport: str = '',\nexternal_axes: Optional","[matplotlib.axes._axes.Axes]"," = None,\nchart: bool = False,\n)\n{{< /highlight >}}"),(0,n.kt)("p",null,".. raw:: html"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"<p>\nDisplay holdings of assets (in percentage)\n</p>\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},"  portfolio: Portfolio\nPortfolio object with trades loaded\nunstack: bool\nIndividual assets over time\nraw : bool\nTo display raw data\nlimit : int\nNumber of past market days to display holdings\nexport: str\nFormat to export plot\nexternal_axes: plt.Axes\nOptional axes to display plot on\nchart: bool\nFlag to display chart"))))}u.isMDXComponent=!0}}]);