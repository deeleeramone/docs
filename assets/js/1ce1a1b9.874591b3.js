"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[15344],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),f=r,h=m["".concat(s,".").concat(f)]||m[f]||u[f]||o;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},41206:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={},i=void 0,l={unversionedId:"features/stocks/options/hedge/calc_gamma",id:"features/stocks/options/hedge/calc_gamma",title:"calc_gamma",description:".. role:: python(code)",source:"@site/terminal/features/stocks/options/hedge/calc_gamma.md",sourceDirName:"features/stocks/options/hedge",slug:"/features/stocks/options/hedge/calc_gamma",permalink:"/terminal/features/stocks/options/hedge/calc_gamma",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/terminal/features/stocks/options/hedge/calc_gamma.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"calc_delta",permalink:"/terminal/features/stocks/options/hedge/calc_delta"},next:{title:"calc_hedge",permalink:"/terminal/features/stocks/options/hedge/calc_hedge"}},s={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,".. role:: python(code)\n:language: python\n:class: highlight"),(0,r.kt)("p",null,"|"),(0,r.kt)("p",null,".. raw:: html"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<h3>\n> Getting data\n</h3>\n")),(0,r.kt)("p",null,"{{< highlight python >}}\nstocks.options.hedge.calc_gamma(\nasset_price: float = 100,\nasset_volatility: float = 20,\nstrike_price: float = 120,\ntime_to_expiration: float = 30,\nrisk_free_rate: float = 0,\nchart: bool = False,\n)\n{{< /highlight >}}"),(0,r.kt)("p",null,".. raw:: html"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<p>\nThe second-order partial-derivative with respect to the underlying asset of the Black-Scholes equation\nis known as gamma. Gamma refers to how the option\u2019s delta changes when there is a change in the underlying\nasset price. Multiplying gamma by a +-$1 change in the underlying asset, holding all other parameters constant,\nwill give you the new value of the option\u2019s delta. Essentially, gamma is telling us the rate of change of delta\ngiven a +-1 change in the underlying asset price. Gamma is always positive for long positions and\nnegative for short positions.\n</p>\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("p",{parentName:"li"},"  asset_price: int\nThe price.\nasset_volatility: float\nThe implied volatility.\nstrike_price: float\nThe strike price.\ntime_to_expiration: float\nThe amount of days until expiration. Use annual notation thus a month would be 30 / 360.\nrisk_free_rate: float\nThe risk free rate.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("p",{parentName:"li"},"  gamma: float\nReturns the value for the gamma."))))}u.isMDXComponent=!0}}]);