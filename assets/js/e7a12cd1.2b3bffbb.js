"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[48485],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},79678:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={},s=void 0,l={unversionedId:"functions/stocks/ba/redditsent",id:"functions/stocks/ba/redditsent",title:"redditsent",description:".. role:: python(code)",source:"@site/sdk/functions/stocks/ba/redditsent.md",sourceDirName:"functions/stocks/ba",slug:"/functions/stocks/ba/redditsent",permalink:"/docs/sdk/functions/stocks/ba/redditsent",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"queries",permalink:"/docs/sdk/functions/stocks/ba/queries"},next:{title:"regions",permalink:"/docs/sdk/functions/stocks/ba/regions"}},i={},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,".. role:: python(code)\n:language: python\n:class: highlight"),(0,a.kt)("p",null,"|"),(0,a.kt)("p",null,"To obtain charts, make sure to add :python:",(0,a.kt)("inlineCode",{parentName:"p"},"chart = True")," as the last parameter."),(0,a.kt)("p",null,".. raw:: html"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"<h3>\n> Getting data\n</h3>\n")),(0,a.kt)("p",null,"{{< highlight python >}}\nstocks.ba.redditsent(\nsymbol: str,\nlimit: int = 100,\nsortby: str = 'relevance',\ntime_frame: str = 'week',\nfull_search: bool = True,\nsubreddits: str = 'all',\nchart: bool = False,\n) -> Tuple","[pandas.core.frame.DataFrame, list, float]","\n{{< /highlight >}}"),(0,a.kt)("p",null,".. raw:: html"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"<p>\nFinds posts related to a specific search term in Reddit\n</p>\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("p",{parentName:"li"},'  symbol: str\nTicker symbol to search for\nlimit: int\nNumber of posts to get per subreddit\nsortby: str\nSearch type\nPossibilities: "relevance", "hot", "top", "new", or "comments"\ntime_frame: str\nRelative time of post\nPossibilities: "hour", "day", "week", "month", "year", "all"\nfull_search: bool\nEnable comprehensive search for ticker\nsubreddits: str\nComma-separated list of subreddits\nchart: bool\nFlag to display chart'))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Returns")),(0,a.kt)("p",{parentName:"li"},"  tuple","[pd.DataFrame, list, float]",":\nDataframe of submissions related to the search term,\nList of polarity scores,\nAverage polarity score"))),(0,a.kt)("p",null,"|"),(0,a.kt)("p",null,".. raw:: html"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"<h3>\n> Getting charts\n</h3>\n")),(0,a.kt)("p",null,"{{< highlight python >}}\nstocks.ba.redditsent(\nsymbol: str,\nsortby: str = 'relevance',\nlimit: int = 100,\ngraphic: bool = False,\ntime_frame: str = 'week',\nfull_search: bool = True,\nsubreddits: str = 'all',\ndisplay: bool = False,\nexport: str = '',\nexternal_axes: Optional[List","[matplotlib.axes._axes.Axes]","] = None,\nchart: bool = False,\n)\n{{< /highlight >}}"),(0,a.kt)("p",null,".. raw:: html"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"<p>\nDetermine Reddit sentiment about a search term\n</p>\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("p",{parentName:"li"},"  symbol: str\nThe ticker symbol being search for in Reddit\nsortby: str\nType of search\nlimit: str\nNumber of posts to get at most\ngraphic: bool\nDisplays box and whisker plot\ntime_frame: str\nTime frame for search\nfull_search: bool\nEnable comprehensive search for ticker\nsubreddits: str\nComma-separated list of subreddits\ndisplay: bool\nEnable printing of raw sentiment values for each post\nexport: str\nFormat to export data\nexternal_axes: Optional[List","[plt.Axes]","]\nIf supplied, expect 1 external axis\nchart: bool\nFlag to display chart"))))}u.isMDXComponent=!0}}]);