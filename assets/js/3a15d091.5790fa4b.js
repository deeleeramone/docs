"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[83475],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||o;return n?a.createElement(f,i(i({ref:t},d),{},{components:n})):a.createElement(f,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},50996:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={},i=void 0,s={unversionedId:"features/etf/load",id:"features/etf/load",title:"load",description:".. role:: python(code)",source:"@site/sdk/features/etf/load.md",sourceDirName:"features/etf",slug:"/features/etf/load",permalink:"/docs/sdk/features/etf/load",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ln",permalink:"/docs/sdk/features/etf/ln"},next:{title:"news",permalink:"/docs/sdk/features/etf/news"}},l={},c=[],d={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,".. role:: python(code)\n:language: python\n:class: highlight"),(0,r.kt)("p",null,"|"),(0,r.kt)("p",null,".. raw:: html"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<h3>\n> Getting data\n</h3>\n")),(0,r.kt)("p",null,"{{< highlight python >}}\netf.load(\nsymbol: str,\nstart_date: Union","[datetime.datetime, str,\nNoneType]"," = datetime.datetime(\n2019, 11, 6, 10, 18, 10, 664216, chart: bool = False,\n), interval: int = 1440,\nend_date: Union","[datetime.datetime, str,\nNoneType]"," = datetime.datetime(\n2022, 11, 10, 10, 18, 10, 664216, chart: bool = False,\n), prepost: bool = False,\nsource: str = 'YahooFinance',\niexrange: str = 'ytd',\nweekly: bool = False,\nmonthly: bool = False,\nverbose: bool = True,\nchart: bool = False,\n)\n{{< /highlight >}}"),(0,r.kt)("p",null,".. raw:: html"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<p>\nLoad a symbol to perform analysis using the string above as a template.\n\nOptional arguments and their descriptions are listed above.\n\nThe default source is, yFinance (https://pypi.org/project/yfinance/).\nOther sources:\n        -   AlphaVantage (https://www.alphavantage.co/documentation/)\n        -   IEX Cloud (https://iexcloud.io/docs/api/)\n        -   Eod Historical Data (https://eodhistoricaldata.com/financial-apis/)\n\nPlease note that certain analytical features are exclusive to the specific source.\n\nTo load a symbol from an exchange outside of the NYSE/NASDAQ default, use yFinance as the source and\nadd the corresponding exchange to the end of the symbol. i.e. `BNS.TO`.  Note this may be possible with\nother paid sources check their docs.\n\nBNS is a dual-listed stock, there are separate options chains and order books for each listing.\nOpportunities for arbitrage may arise from momentary pricing discrepancies between listings\nwith a dynamic exchange rate as a second order opportunity in ForEx spreads.\n\nFind the full list of supported exchanges here:\nhttps://help.yahoo.com/kb/exchanges-data-providers-yahoo-finance-sln2310.html\n\nCertain analytical features, such as VWAP, require the ticker to be loaded as intraday\nusing the `-i x` argument.  When encountering this error, simply reload the symbol using\nthe interval argument. i.e. `load -t BNS -s YYYY-MM-DD -i 1 -p` loads one-minute intervals,\nincluding Pre/After Market data, using the default source, yFinance.\n\nCertain features, such as the Prediction menu, require the symbol to be loaded as daily and not intraday.\n</p>\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("p",{parentName:"li"},"  symbol: str\nTicker to get data\nstart_date: str or datetime, optional\nStart date to get data from with. - datetime or string format (YYYY-MM-DD)\ninterval: int\nInterval (in minutes) to get data 1, 5, 15, 30, 60 or 1440\nend_date: str or datetime, optional\nEnd date to get data from with. - datetime or string format (YYYY-MM-DD)\nprepost: bool\nPre and After hours data\nsource: str\nSource of data extracted\niexrange: str\nTimeframe to get IEX data.\nweekly: bool\nFlag to get weekly data\nmonthly: bool\nFlag to get monthly data\nverbose: bool\nDisplay verbose information on what was the symbol that was loaded")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("p",{parentName:"li"},"  df_stock_candidate: pd.DataFrame\nDataframe of data"))))}p.isMDXComponent=!0}}]);